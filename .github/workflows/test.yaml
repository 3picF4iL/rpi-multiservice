name: Test Docker Image

on:
  workflow_dispatch:
  push:
    branches: ["master"]
    paths:
      - "ansible/**"
      - ".github/**"

env:
  IMAGE_NAME: mockrpi-os
  IMAGE_TAG: latest

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
        repository_owner: ${{ steps.set_owner.outputs.owner }}
    steps:
      - name: Set repository owner to lowercase
        id: set_owner
        run: |
          owner="$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')"
          variable="owner=$owner"
          echo "$variable" >> $GITHUB_ENV
          echo "$variable" >> $GITHUB_OUTPUT

  check:
    needs: setup
    runs-on: ubuntu-latest
    outputs:
      image_exists: ${{ steps.image_check.outputs.image_exists }}
    steps:
      - name: Check if Docker image exists
        id: image_check
        run: |
          repo_owner=${{ needs.setup.outputs.repository_owner }}
          ENCODED_TOKEN=$(echo -n "${{ secrets.GITHUB_TOKEN }}" | base64)
          TAG_EXISTS=$(curl -s -H "Authorization: Bearer ${ENCODED_TOKEN}" \
              "https://ghcr.io/v2/$repo_owner/${{ env.IMAGE_NAME }}/tags/list" | \
              jq -r --arg TAG "latest" '.tags[] | select(. == $TAG)')

          echo "$TAG_EXISTS"

          if [[ -n "$TAG_EXISTS" ]]; then
            echo "image_exists=true" >> $GITHUB_OUTPUT
          else
            echo "image_exists=false" >> $GITHUB_OUTPUT
          fi

  build_image:
    needs: check
    if: ${{ needs.check.outputs.image_exists == 'false' }}
    uses: ./.github/workflows/build-image.yaml

  run_tests:
    needs: [setup, check]
    if: ${{ needs.check.outputs.image_exists == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Run Ansible tests
        run: |
          PLATFORM_ARCH="linux/arm64"
          IMAGE="${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          IMAGE_LINK="ghcr.io/${{ needs.setup.outputs.repository_owner }}/$IMAGE"
          PLAYBOOK_PATH="/ansible/playbooks/rpi_multi_services.yaml"

          export ANSIBLE_ROLES_PATH=$ANSIBLE_ROLES_PATH:/ansible/roles

          docker run --rm --platform \
            $PLATFORM_ARCH \
            $IMAGE_LINK \
            ansible-playbook $PLAYBOOK_PATH
