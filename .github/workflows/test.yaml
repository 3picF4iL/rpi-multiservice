name: Test Docker Image

on:
  workflow_dispatch:
  push:
    branches: ["master"]
    paths:
      - "ansible/**"
      - ".github/**"

env:
  IMAGE_NAME: mockrpi-os

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      image_exists: ${{ steps.image_check.outputs.image_exists }}
    steps:
      - name: Set repository owner to lowercase
        run: |
          echo "repository_owner=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
  
      - name: Check if Docker image exists
        id: image_check
        run: |
          ENCODED_TOKEN=$(echo -n "${{ secrets.GITHUB_TOKEN }}" | base64)
          TAG_EXISTS=$(curl -s -H "Authorization: Bearer ${ENCODED_TOKEN}" \
              "https://ghcr.io/v2/${{ env.repository_owner }}/${{ env.IMAGE_NAME }}/tags/list" | \
              jq -r --arg TAG "latest" '.tags[] | select(. == $TAG)')

          echo "$TAG_EXISTS"

          if [[ -n "$TAG_EXISTS" ]]; then
            echo "image_exists=true" >> $GITHUB_OUTPUT
          else
            echo "image_exists=false" >> $GITHUB_OUTPUT
          fi

  build_image:
    needs: check
    if: ${{ needs.check.outputs.image_exists == 'false' }}
    uses: ./.github/workflows/build-image.yaml

  run_tests:
    needs: [check, build_image]
    if: ${{ needs.check.outputs.image_exists == 'true' || (needs.build_image.result && needs.build_image.result == 'success') }}
    runs-on: ubuntu-latest
    steps:
      - name: Use repository owner
        run: |
          echo "Repository Owner: ${{ env.repository_owner }}"

      - name: Run Ansible tests
        run: |
          docker run --rm ghcr.io/${{ env.repository_owner }}/mockrpi-os:latest ansible-playbook /ansible/playbooks/rpi_multi_services.yaml -i localhost
