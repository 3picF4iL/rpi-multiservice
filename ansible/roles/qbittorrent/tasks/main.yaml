---
- name: Qbittorrent service installation
  become: true
  block:
    - name: Install qbittorrent (nox) packages
      ansible.builtin.apt:
        name: qbittorrent-nox
        state: present
        update_cache: true

    - name: Copy qbittorrent service to /var/lib
      ansible.builtin.copy:
        src: "qbittorrent.service"
        dest: /lib/systemd/system/
        mode: "0644"

    - name: Create symlink for Qbittorrent service in multi-user.target.wants
      ansible.builtin.file:
        src: /lib/systemd/system/qbittorrent.service
        dest: /etc/systemd/system/qbittorrent.service
        state: link

    - name: Restart Qbittorrent service, reload daemon and enable the service
      ansible.builtin.systemd:
        name: qbittorrent
        state: restarted
        daemon_reload: true
        enabled: true
        masked: false

    - name: Copy qbittorrent configuration file
      ansible.builtin.copy:
        src: "qBittorrent.conf"
        dest: "{{ qbittorrent_config }}"
        mode: "0664"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"

    - name: Set configuration options according to variables
      community.general.ini_file:
        path: "{{ qbittorrent_config }}"
        section: "Preferences"
        option: "{{ item.key }}"
        value: "{{ item.value }}"
      with_items: "{{ qbittorrent_modifiers | dict2items }}"

    - name: Set qBittorrent 'WebUI\Password_PBKDF2'
      community.general.ini_file:
        path: "{{ qbittorrent_config }}"
        section: "Preferences"
        option: WebUI\Password_PBKDF2
        value: "{{ qbittorrent_ui_passwd | qbittorrent_passwd }}"

    - name: Restart Qbittorrent service, reload daemon and enable the service
      ansible.builtin.systemd:
        name: qbittorrent
        state: restarted
        daemon_reload: true
        enabled: true
        masked: false
